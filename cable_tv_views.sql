
/* VIEWS */

/* CUSTOMER ACCOUNT BALANCE */
CREATE VIEW CA_BALANCE AS
    SELECT CUSTOMER_ID, SUM(OUTSTANDING_BALANCE) AS TOTAL_CUSTOMER_BALANCE FROM ACCOUNTBILL 
    GROUP BY CUSTOMER_ID;

/* CUSTOMER ACCOUNT POSITIVE BALANCE */
CREATE VIEW CA_POSITIVE_BALANCE AS
    SELECT * FROM CA_BALANCE WHERE TOTAL_CUSTOMER_BALANCE > 0;

/* CUSTOMER ACCOUNT DETAILS WITH BALANCE */
CREATE VIEW CA_WITH_BALANCE AS
    SELECT * FROM CUSTOMER LEFT JOIN CA_BALANCE
    USING (CUSTOMER_ID);

/* CUSTOMER ACCOUNT DETAILS WITH POSITIVE BALANCE */
CREATE VIEW CA_WITH_POSITIVE_BALANCE AS
    SELECT * FROM CUSTOMER RIGHT JOIN CA_POSITIVE_BALANCE
    USING (CUSTOMER_ID);

/* SERVICE ACCOUNT BALANCE */
CREATE VIEW SA_BALANCE AS
    SELECT ACCOUNT_ID, SUM(OUTSTANDING_BALANCE) AS BALANCE FROM ACCOUNTBILL 
    GROUP BY ACCOUNT_ID;

/* SERVICE ACCOUNT INFO WITH BALANCE */
CREATE VIEW SA_WITH_BALANCE AS
    SELECT ACCOUNT_ID, CUSTOMER_ID, METHOD_OF_PAYMENT, DATE_SUBSCRIBED, DATE_TERMINATED,
    CASE WHEN BALANCE IS NULL THEN 0 ELSE BALANCE END AS BALANCE
    FROM SERVICEACCOUNT SA LEFT JOIN SA_BALANCE SAB
    USING (ACCOUNT_ID);

